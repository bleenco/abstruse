syntax = "proto3";
package api;
option go_package = "./;api";

import "google/protobuf/empty.proto";

service API {
  rpc Connect(google.protobuf.Empty) returns (HostInfo) {}
  rpc Usage(stream google.protobuf.Empty) returns (stream UsageStats) {}
  rpc StartJob(Job) returns (stream JobResp) {}
  rpc StopJob(Job) returns (JobStopResp) {}
}

message HostInfo {
  string id = 1;
  string addr = 2;
  string hostname = 3;
  uint64 uptime = 4;
  uint64 bootTime = 5;
  uint64 procs = 6;
  string os = 7;
  string platform = 8;
  string platformFamily = 9;
  string platformVersion = 10;
  string kernelVersion = 11;
  string kernelArch = 12;
  string virtualizationSystem = 13;
  string virtualizationRole = 14;
  string hostID = 15;
  uint64 maxParallel = 16;
}

message UsageStats {
  int32 cpu = 1;
  int32 mem = 2;
}

message EnvVariable {
  string key = 1;
  string value = 2;
  bool secret = 3;
}

message Job {
  enum JobAction {
    JobStart = 0;
    JobStop = 1;
  }
  uint64 id = 1;
  uint64 buildId = 2;
  string name = 3;
  repeated Command commands = 4;
  string image = 5;
  string url = 6;
  string providerName = 7;
  string providerURL = 8;
  string providerToken = 9;
  string ref = 10;
  string commitSHA = 11;
  string repoName = 12;
  repeated string log = 13;
  string status = 14;
  string workerId = 15;
  JobAction action = 16;
  repeated EnvVariable env = 17;
  repeated string cache = 18;
  repeated string mount = 19;
  string sshURL = 20;
  string sshPrivateKey = 21;
  bool sshClone = 22;
  string branch = 23;
  repeated string archive = 24;
}

message Command {
  enum CommandType {
    BeforeInstall = 0;
    Install = 1;
    BeforeScript = 2;
    Script = 3;
    AfterSuccess = 4;
    AfterFailure = 5;
    BeforeDeploy = 6;
    Deploy = 7;
    AfterDeploy = 8;
    AfterScript = 9;
  }
  CommandType type = 1;
  string command = 2;
}

message CommandList {
  repeated Command commands = 1;
}

message JobResp {
  enum JobStatus {
    StatusUnknown = 0;
    StatusQueued = 1;
    StatusRunning = 2;
    StatusPassing = 3;
    StatusFailing = 4;
  }

  enum JobRespType {
    Log = 0;
    Done = 1;
    Cache = 2;
  }

  uint64 id = 1;
  bytes content = 2;
  JobStatus status = 3;
  JobRespType type = 4;
}

message JobStopResp {
  bool stopped = 1;
}
